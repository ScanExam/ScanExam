package fr.istic.tools.scanexam.core

class QuestionZone 
{
	float x
	float y
	float width
	float heigth
}

class QrCodeZone 
{
	float x
	float y
	float width
	float height
}

class Question 
{
	int ^id
	String name
	contains GradeScale gradeScale
	contains QuestionZone zone
}

class GradeScale 
{
	float maxPoint
	contains GradeEntry[] steps
}

class GradeEntry
{
	int ^id
	float step
	String header
}

class Exam {
	int ^id
	String name
	contains QrCodeZone qrCodeZone
	contains Page[] pages
	op float computeMaxGrade() {
		var float grade = 0f
		for (page : pages) {
			grade += page.questions.map[q|q.gradeScale.maxPoint].reduce[acc, v|v + acc]
		}
		grade
	}
}

class Page 
{
	int ^id
	contains Question[] questions
}

class Comment {
	int ^id
	int pageId
	float x
	float y
	float pointerX
	float pointerY
}

class TextComment extends Comment {
	String text
}

class HandwritingComment {
	int pageId
	contains Line[] lines
}

class Line {
	float x1
	float y1
	float x2
	float y2
	float thinkness
	String color // hexa
}

class Grade {
	refers GradeEntry[] entries
	contains Comment[] comments
	op float getGradeValue() {
		val res = entries.stream.map(grade|grade.step).reduce[acc, v|v + acc]
		if (res.isPresent)
			res.get
		else
			0f
	}
}

class StudentSheet {
	int ^id
	String studentID
	String firstName
	String lastName
	int[] posPage
	contains Grade[] grades
	op float computeGrade() {
		var result = 0f;

		for (var i = 0; i < grades.size; i++) {
			result += grades.get(i).getGradeValue()
		}

		return result
	}
	op boolean isGraded() {
		grades.findFirst[g|g.entries.isEmpty] === null
	}
	op String getStudentInfo() {
		var resLastName = lastName
		var resFirstName = firstName
		var resID = studentID

		if (resLastName == "?" || resFirstName == "?") {
			resLastName = ""
			resFirstName = ""
		}

		if (resID == "?")
			resID = ""

		return resID + "_" + resFirstName + "_" + resLastName
	}
}

class StudentInformation {
	String userId
	String lastName
	String firstName
	String emailAddress
}
